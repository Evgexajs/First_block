{"version":3,"sources":["component/counter.js","component/buttons.js","App.js","redux/types.js","index.js","redux/rootReducer.js","redux/actions.js"],"names":["className","App","INCREMENT","DECREMENT","render","StrictMode","document","getElementById","counter","querySelector","addBtn","subBtn","asyncBtn","store","createStore","state","action","type","applyMiddleware","thunk","addEventListener","dispatch","subscribe","getState","textContent","setTimeout"],"mappings":"6KAEe,aACX,OACI,qBAAKA,UAAU,gBAAf,SACI,2CAAa,sBAAMA,UAAU,WAA7B,UCHG,aACX,OACI,gCACI,wBAAQA,UAAU,eAAlB,iBACA,wBAAQA,UAAU,eAAlB,oBACA,wBAAQA,UAAU,iBAAlB,uB,MCMGC,MATf,WACE,OACE,sBAAKD,UAAU,WAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCROE,EAAY,YACZC,EAAY,YCOzBC,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1B,IAAMC,EAAUF,SAASG,cAAc,WACjCC,EAASJ,SAASG,cAAc,iBAChCE,EAASL,SAASG,cAAc,iBAChCG,EAAWN,SAASG,cAAc,mBAElCI,EAAQC,aCjBP,SAAqBC,EAAOC,GAC/B,OAAIA,EAAOC,OAASf,EACTa,EAAQ,EACRC,EAAOC,OAASd,EAChBY,EAAQ,EAGZA,IDYP,EACAG,YAAgBC,MAGpBT,EAAOU,iBAAiB,SAAS,WAC/BP,EAAMQ,SEvBG,CACHJ,KAAMf,OFyBdS,EAAOS,iBAAiB,SAAS,WAC/BP,EAAMQ,SErBG,CACHJ,KAAMd,OFwBdU,EAAMS,WAAW,WACf,IAAMP,EAAQF,EAAMU,WACpBf,EAAQgB,YAAcT,KAGxBF,EAAMQ,SAAU,CAACJ,KAAM,oBAEvBL,EAASQ,iBAAiB,SAAS,WACjCP,EAAMQ,UE3BG,SAASA,GACZI,YAAY,WACRJ,EAAS,CAACJ,KAAMf,MACjB,c","file":"static/js/main.830037e7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"counter__text\">\r\n            <h5>Counter: <span className=\"number\"></span> </h5>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <button className=\"counter__add\">Add</button>\r\n            <button className=\"counter__sub\">Reduce</button>\r\n            <button className=\"counter__async\">Async</button>\r\n        </div>\r\n    )\r\n}","import Counter from './component/counter';\nimport Buttons from './component/buttons';\nimport './style/style.css';\n\nfunction App() {\n  return (\n    <div className=\"counters\">\n      <Counter />\n      <Buttons />\n    </div>\n  );\n}\n\nexport default App;\n","export const INCREMENT = 'INCREMENT'\r\nexport const DECREMENT = 'DECREMENT'\r\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\nimport {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport { asyncIncrement, decrement, increment } from './redux/actions'\nimport {rootReducer} from './redux/rootReducer'\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nconst counter = document.querySelector(\".number\")\nconst addBtn = document.querySelector(\".counter__add\")\nconst subBtn = document.querySelector(\".counter__sub\")\nconst asyncBtn = document.querySelector(\".counter__async\")\n\nconst store = createStore(\n    rootReducer,\n    0,\n    applyMiddleware(thunk)\n  );\n\naddBtn.addEventListener('click', () => {\n  store.dispatch(increment())\n})\n\nsubBtn.addEventListener('click', () => {\n  store.dispatch(decrement())\n})\n\n\nstore.subscribe (() => {\n  const state = store.getState()\n  counter.textContent = state;\n})\n\nstore.dispatch( {type: 'INIT_APLICATION'})\n\nasyncBtn.addEventListener('click', () => {\n  store.dispatch(asyncIncrement())\n})\n","import {DECREMENT, INCREMENT} from './types'\r\n\r\nexport function rootReducer(state, action) {\r\n    if (action.type === INCREMENT) {\r\n        return state + 1;\r\n    } else if (action.type === DECREMENT) {\r\n        return state - 1;\r\n    }\r\n    \r\n    return state\r\n}","import { DECREMENT, INCREMENT } from \"./types\";\r\n\r\nexport function increment() {\r\n    return {\r\n        type: INCREMENT\r\n    }\r\n}\r\n\r\nexport function decrement() {\r\n    return {\r\n        type: DECREMENT\r\n    }\r\n}\r\n\r\nexport function asyncIncrement() {\r\n    return function(dispatch) {\r\n        setTimeout( () => {\r\n            dispatch({type: INCREMENT})\r\n        }, 1500)\r\n    }\r\n}"],"sourceRoot":""}